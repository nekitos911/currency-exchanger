buildscript {
    ext {
        springBootVersion = '2.7.5'
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}


plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.0'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'org.unbroken-dome.xjc' version '2.0.0'
}

configurations {
    jaxb
}


version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

jar {
    manifest {
        attributes(
                'Main-Class': 'com.github.nekitos911.CurrencyRateServiceApplication'
        )
    }
}

ext {
    set('springCloudVersion', "2022.0.0")
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

xjc {
    xjcVersion = '3.0'
}


dependencies {
    implementation "org.springframework.boot:spring-boot-starter-web:3.0.2"
    implementation "org.springframework.boot:spring-boot-starter-actuator:3.0.2"
//    implementation "org.springframework.boot:spring-boot-starter-data-jpa:3.0.2"
    implementation "org.springframework.cloud:spring-cloud-starter-config"
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation "org.springframework.cloud:spring-cloud-starter-openfeign"
    implementation "org.springframework.cloud:spring-cloud-starter-netflix-eureka-client"
    implementation 'io.micrometer:micrometer-tracing:1.0.1'
    implementation "org.springframework.cloud:spring-cloud-starter-netflix-hystrix:2.2.10.RELEASE"
    implementation 'org.springframework.boot:spring-boot-starter-cache'
//    runtimeOnly 'org.postgresql:postgresql'

    implementation 'jakarta.xml.bind:jakarta.xml.bind-api:4.0.0'
    implementation 'com.sun.xml.bind:jaxb-impl:4.0.0'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}
//
//task jaxb {
//    System.setProperty('javax.xml.accessExternalSchema', 'all')
//    def jaxbTargetDir = file("src/generated-sources/jaxb")
//    doLast {
//        jaxbTargetDir.mkdirs()
//        ant.taskdef(
//                name: 'xjc',
//                classname: 'com.sun.tools.xjc.XJCTask',
//                classpath: configurations.jaxb.asPath
//        )
//        ant.jaxbTargetDir = jaxbTargetDir
//        ant.xjc(
//                destdir: '${jaxbTargetDir}',
//                package: 'com.roytuts.jaxb',
//                schema: 'src/main/resources/xsd/global.xsd'
//        )
//    }
//}
//
//compileJava.dependsOn jaxb

tasks.named('test') {
    useJUnitPlatform()
}